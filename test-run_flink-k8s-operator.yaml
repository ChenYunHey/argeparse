apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: test-run
  namespace: flink-k8s-operator
spec:
  flinkConfiguration:
    classloader.resolve-order: parent-first
    containerized.master.env.LAKESOUL_PG_DRIVER: com.lakesoul.shaded.org.postgresql.Driver
    containerized.master.env.LAKESOUL_PG_PASSWORD: zkz9s7m4
    containerized.master.env.LAKESOUL_PG_URL: jdbc:postgresql://pgcluster-postgresql.default.svc.cluster.local:5432/postgres?stringtype=unspecified
    containerized.master.env.LAKESOUL_PG_USERNAME: postgres
    containerized.taskmanager.env.LAKESOUL_PG_DRIVER: com.lakesoul.shaded.org.postgresql.Driver
    containerized.taskmanager.env.LAKESOUL_PG_PASSWORD: zkz9s7m4
    containerized.taskmanager.env.LAKESOUL_PG_URL: jdbc:postgresql://pgcluster-postgresql.default.svc.cluster.local:5432/postgres?stringtype=unspecified
    containerized.taskmanager.env.LAKESOUL_PG_USERNAME: postgres
    env.java.opts: -Djava.io.tmpdir=/tmp
    execution.checkpointing.checkpoints-after-tasks-finish.enabled: true
    execution.checkpointing.interval: 1min
    high-availability: org.apache.flink.kubernetes.highavailability.KubernetesHaServicesFactory
    high-availability.storageDir: hdfs:///flink-data/ha
    high-availability.type: kubernetes
    jobmanager.execution.failover-strategy: region
    jobmanager.rpc.address: localhost
    jobmanager.rpc.port: 6123
    kubernetes.decorator.hadoop-conf-mount.enabled: 'false'
    kubernetes.namespace: lakesoul-dashboard
    kubernetes.operator.jm-deployment-recovery.enabled: 'false'
    kubernetes.operator.job.restart.failed: 'false'
    kubernetes.pod-template-file.jobmanager: /opt/dashboard/conf/flink-podTemplate.yaml
    kubernetes.pod-template-file.taskmanager: /opt/dashboard/conf/flink-podTemplate.yaml
    kubernetes.rest-service.exposed.type: NodePort
    kubernetes.taskmanager.cpu.amount: 1
    kubernetes.taskmanager.cpu.limit-factor: 2.0
    kubernetes.taskmanager.memory.limit-factor: 1.5
    lakesoul.file.max_row_group_size: 100000
    lakesoul.file.rolling.rows: 500000
    metrics.reporter.promgateway.deleteOnShutdown: false
    metrics.reporter.promgateway.factory.class: org.apache.flink.metrics.prometheus.PrometheusPushGatewayReporterFactory
    metrics.reporter.promgateway.host: pushgateway-service.lakesoul-dashboard.svc
    metrics.reporter.promgateway.interval: 10 SECONDS
    metrics.reporter.promgateway.jobName: flink-metrics
    metrics.reporter.promgateway.port: 9091
    metrics.reporter.promgateway.randomJobNameSuffix: false
    parallelism.default: 1
    rest.address: 0.0.0.0
    rest.bind-port: 8081
    rest.port: 8081
    restart-strategy: fixed-delay
    restart-strategy.fixed-delay.attempts: '3'
    restart-strategy.fixed-delay.delay: 10 s
    s3.access-key: minioadmin
    s3.endpoint: http://minio-svc.lakesoul-dashboard.svc:9000
    s3.path.style.access: true
    s3.secret-key: minioadmin
    s3.signing-algorithm: S3SignerType
    state.backend: rocksdb
    state.backend.incremental: true
    state.checkpoints.dir: hdfs:///flink-checkpoints
    state.savepoints.dir: hdfs:///flink-savepoints
    table.exec.mini-batch.allow-latency: 5s
    table.exec.mini-batch.enabled: true
    table.exec.mini-batch.size: 5000
    taskmanager.numberOfTaskSlots: 2
  flinkVersion: v1_17
  image: sealos.hub:5000/flink-benchmark:1.5
  jobManager:
    replicas: 1
    resource:
      cpu: 1
      memory: 1600m
  podTemplate:
    spec:
      containers:
      - env:
        - name: HADOOP_HOME
          value: /opt/hadoop
        - name: FLINK_CONF_DIR
          value: /opt/flink/conf
        name: flink-main-container
        resources:
          limits:
            ephemeral-storage: 2048Mi
          requests:
            ephemeral-storage: 2048Mi
        volumeMounts:
        - mountPath: /opt/flink/artifacts
          name: flink-artifact
        - mountPath: /opt/flink/lib/lakesoul
          name: flink-artifact
        - mountPath: /opt/dashboard/work-dir/mysql
          name: flink-venv
        - mountPath: /opt/dashboard/conf/certs
          name: ssl-certs
          readOnly: true
      initContainers:
      - command:
        - sh
        - -c
        - 'mc alias set myminio http://minio-svc.lakesoul-dashboard.svc:9000  minioadmin
          minioadmin

          mc cp myminio/lakesoul-bucket/files/lakesoul-flink-1.17-2.6.0-1.jar /flink-artifact/

          mc cp --recursive myminio/lakesoul-bucket/resource-manager/${WORKSPACE}/usrlib/
          /flink-artifact/

          mc cp --recursive myminio/lakesoul-bucket/files/flink-env/ /flink-venv/

          '
        env:
        - name: WORKSPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: swr.cn-southwest-2.myhuaweicloud.com/dmetasoul-repo/minio/mc
        name: artifacts-fetcher
        volumeMounts:
        - mountPath: /flink-artifact
          name: flink-artifact
        - mountPath: /flink-venv
          name: flink-venv
      volumes:
      - emptyDir: {}
        name: flink-artifact
      - emptyDir: {}
        name: flink-venv
      - name: ssl-certs
        secret:
          secretName: kafka-tls-secret
  serviceAccount: flink
  taskManager:
    resource:
      cpu: 1
      memory: 1728m
